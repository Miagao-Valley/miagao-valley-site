---
import Grid from "./Grid.astro";
---

<Grid variant="small" id="languages" />

<script>
    import { Chart } from "chart.js/auto";
    import { languages, totalLangUsage } from "../content/data/githubStats.js";

    const container = document.querySelector("#languages.grid")!;

    const colors = {
        accentLight: "#92D5DA",
        accentDark: "#3E007D",
        gray900: "#f3f4f7",
        gray999: "#ffffff",
    };

    Chart.defaults.font.family = "Public Sans";
    Chart.defaults.font.size = 16;

    function renderChart(label: string, values: number[]) {
        const li = document.createElement("li");
        li.style.display = "flex";
        li.style.justifyContent = "center";

        const chartContainer = document.createElement("div");
        chartContainer.style.width = "200px";

        const canvas = document.createElement("canvas");
        canvas.id = label;

        chartContainer.appendChild(canvas);
        li.appendChild(chartContainer);
        container.appendChild(li);

        const ctx = canvas.getContext("2d")!;

        const accentGrad = ctx.createLinearGradient(0, 0, 280, 0);
        accentGrad.addColorStop(0, colors.accentLight);
        accentGrad.addColorStop(1, colors.accentDark);

        const bgGrad = ctx.createLinearGradient(0, 0, 280, 0);
        bgGrad.addColorStop(0, colors.gray900);
        bgGrad.addColorStop(1, colors.gray999);

        const dataset = {
            datasets: [
                {
                    data: values,
                    backgroundColor: [accentGrad, bgGrad],
                    hoverOffset: 4,
                    borderColor: "rgba(1, 1, 1, 0)",
                    cutout: "90%",
                },
            ],
        };

        const doughnutLabel = {
            id: "doughnutLabel",
            beforeDatasetsDraw(chart: any) {
                const { ctx } = chart;
                ctx.save();
                const xCor = chart.getDatasetMeta(0).data[0].x;
                const yCor = chart.getDatasetMeta(0).data[0].y;
                ctx.textAlign = "center";
                ctx.textBaseline = "middle";
                ctx.fillStyle = colors.accentDark;
                ctx.fillText(label, xCor, yCor);
            },
        };

        const chart = new Chart(ctx, {
            type: "doughnut",
            data: dataset,
            plugins: [doughnutLabel],
        });

        return chart;
    }

    languages.forEach((lang) => {
        let values = [lang.value, totalLangUsage - lang.value];
        renderChart(lang.name, values);
    });
</script>
